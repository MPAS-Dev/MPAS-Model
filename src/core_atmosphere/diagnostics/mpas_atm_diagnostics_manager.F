! Copyright (c) 2016,  Los Alamos National Security, LLC (LANS)
! and the University Corporation for Atmospheric Research (UCAR).
!
! Unless noted otherwise source code is licensed under the BSD license.
! Additional copyright and license information can be found in the LICENSE file
! distributed with this code, or at http://mpas-dev.github.com/license.html
!
module mpas_atm_diagnostics_manager

    use mpas_io_units, only : stderrUnit

    private

    public :: mpas_atm_diag_setup, &
              mpas_atm_diag_update, &
              mpas_atm_diag_compute, &
              mpas_atm_diag_reset, &
              mpas_atm_diag_cleanup

    contains


    !-----------------------------------------------------------------------
    !  routine MPAS_atm_diag_setup
    !
    !> \brief Initialize the diagnostics manager and all diagnostics
    !> \author Michael Duda
    !> \date   6 September 2016
    !> \details
    !>  Initialize the diagnostics manager and all diagnostics.
    !
    !-----------------------------------------------------------------------
    subroutine mpas_atm_diag_setup(stream_mgr, configs, structs, clock, dminfo)

        use mpas_atm_diagnostics_utils, only : mpas_atm_diag_utils_init
        use mpas_derived_types, only : MPAS_streamManager_type, MPAS_pool_type, MPAS_clock_type, dm_info
        use diagnostic_template, only : diagnostic_template_setup
        use isobaric_diagnostics, only : isobaric_diagnostics_setup
        use convective_diagnostics, only : convective_diagnostics_setup
        use snowratio_diagnostics, only : snowratio_diagnostics_setup
        use surface_diagnostics, only : surface_diagnostics_setup
        use deformation_diagnostics, only : deformation_diagnostics_setup
        use accumulated_diagnostics, only : accumulated_diagnostics_setup
        use aviation_diagnostics, only : aviation_diagnostics_setup
        use unstagger_diagnostics, only : unstagger_diagnostics_setup
        use pv_diagnostics, only : pv_diagnostics_setup
        use soundings, only : soundings_setup

        implicit none

        type (MPAS_streamManager_type), target, intent(inout) :: stream_mgr
        type (MPAS_pool_type), pointer :: configs
        type (MPAS_pool_type), pointer :: structs
        type (MPAS_clock_type), pointer :: clock
        type (dm_info), intent(in) :: dminfo


        !
        ! Prepare the diagnostics utilities module for later use by diagnostics
        !
        call mpas_atm_diag_utils_init(stream_mgr)

        call diagnostic_template_setup(configs, structs, clock)
        call isobaric_diagnostics_setup(structs, clock)
        call convective_diagnostics_setup(structs, clock)
        call snowratio_diagnostics_setup(configs, structs)
        call surface_diagnostics_setup(configs, structs, clock)
        call accumulated_diagnostics_setup(configs, structs, clock)
        call deformation_diagnostics_setup(structs)
        call aviation_diagnostics_setup(structs)
        call unstagger_diagnostics_setup(structs)
        call pv_diagnostics_setup(structs, clock)
        call soundings_setup(configs, structs, clock, dminfo)

    end subroutine mpas_atm_diag_setup


    !-----------------------------------------------------------------------
    !  routine MPAS_atm_diag_update
    !
    !> \brief Handle diagnostics accumulation at the end of each timestep
    !> \author Michael Duda
    !> \date   6 September 2016
    !> \details
    !>  MPAS_atm_diag_update.
    !
    !-----------------------------------------------------------------------
    subroutine mpas_atm_diag_update()

        use diagnostic_template, only : diagnostic_template_update
        use convective_diagnostics, only : convective_diagnostics_update
        use accumulated_diagnostics, only : accumulated_diagnostics_update
        use aviation_diagnostics, only : aviation_diagnostics_update

        implicit none


        call diagnostic_template_update()
        call convective_diagnostics_update()
        call accumulated_diagnostics_update()
        call aviation_diagnostics_update()

    end subroutine mpas_atm_diag_update


    !-----------------------------------------------------------------------
    !  routine MPAS_atm_diag_compute
    !
    !> \brief Compute diagnostics before they are written to output streams
    !> \author Michael Duda
    !> \date   6 September 2016
    !> \details
    !>  MPAS_atm_diag_compute.
    !
    !-----------------------------------------------------------------------
    subroutine mpas_atm_diag_compute()

        use diagnostic_template, only : diagnostic_template_compute
        use isobaric_diagnostics, only : isobaric_diagnostics_compute
        use convective_diagnostics, only : convective_diagnostics_compute
        use snowratio_diagnostics, only : snowratio_diagnostics_compute
        use surface_diagnostics, only : surface_diagnostics_compute
        use accumulated_diagnostics, only : accumulated_diagnostics_compute
        use deformation_diagnostics, only : deformation_diagnostics_compute
        use aviation_diagnostics, only : aviation_diagnostics_compute
        use unstagger_diagnostics, only : unstagger_diagnostics_compute
        use pv_diagnostics, only : pv_diagnostics_compute
        use soundings, only : soundings_compute

        implicit none

        call diagnostic_template_compute()
        call isobaric_diagnostics_compute()
        call convective_diagnostics_compute()
        call snowratio_diagnostics_compute()
        call surface_diagnostics_compute()
        call accumulated_diagnostics_compute()
        call deformation_diagnostics_compute()
        call aviation_diagnostics_compute()
        call unstagger_diagnostics_compute()
        call pv_diagnostics_compute()
        call soundings_compute()

    end subroutine mpas_atm_diag_compute


    !-----------------------------------------------------------------------
    !  routine MPAS_atm_diag_reset
    !
    !> \brief Resets a diagnostic after it has been computed and written
    !> \author Michael Duda
    !> \date   6 September 2016
    !> \details
    !>  MPAS_atm_diag_reset.
    !
    !-----------------------------------------------------------------------
    subroutine mpas_atm_diag_reset()

        use diagnostic_template, only : diagnostic_template_reset
        use convective_diagnostics, only : convective_diagnostics_reset
        use surface_diagnostics, only : surface_diagnostics_reset
        use aviation_diagnostics, only : aviation_diagnostics_reset
        use accumulated_diagnostics, only : accumulated_diagnostics_reset

        implicit none

        call diagnostic_template_reset()
        call convective_diagnostics_reset()
        call surface_diagnostics_reset()
        call accumulated_diagnostics_reset()
        call aviation_diagnostics_reset()

    end subroutine mpas_atm_diag_reset


    !-----------------------------------------------------------------------
    !  routine MPAS_atm_diag_cleanup
    !
    !> \brief Finalizes diagnostics manager and all diagnostics
    !> \author Michael Duda
    !> \date   6 September 2016
    !> \details
    !>  Finalizes diagnostics manager and all diagnostics.
    !
    !-----------------------------------------------------------------------
    subroutine mpas_atm_diag_cleanup()

        use mpas_atm_diagnostics_utils, only : mpas_atm_diag_utils_finalize
        use diagnostic_template, only : diagnostic_template_cleanup
        use accumulated_diagnostics, only : accumulated_diagnostics_cleanup
        use aviation_diagnostics, only : aviation_diagnostics_cleanup
        use soundings, only : soundings_cleanup

        implicit none

        call diagnostic_template_cleanup()
        call soundings_cleanup()
        call accumulated_diagnostics_cleanup()
        call aviation_diagnostics_cleanup()

        !
        ! Take care of any needed cleanup in the diagnostics utility module
        !
        call mpas_atm_diag_utils_finalize()

    end subroutine mpas_atm_diag_cleanup

end module mpas_atm_diagnostics_manager
